from manimlib.imports import *

from manimlib.imports import *

class Orthogonal(ThreeDScene):
    def construct(self):

        text = TextMobject(r"These are two Orthogonal Basis $\alpha_{1}$ and $\alpha_{2}$")
        text.scale(0.75)
        self.add_fixed_in_frame_mobjects(text)
        text.move_to(3*(DOWN+RIGHT))
        self.play(Write(text))

        axes = ThreeDAxes()
        self.play(ShowCreation(axes))
        self.move_camera(phi=60*DEGREES,theta=45*DEGREES,run_time=3)
        self.begin_ambient_camera_rotation(rate=0.3)
        
        line1 = Line(start = ORIGIN,end = 1*RIGHT)
        line1.set_color(DARK_BLUE)
        tip1 = Polygon(RIGHT,0.8*RIGHT-0.2*DOWN,0.8*RIGHT-0.2*UP)
        tip1.set_opacity(1)
        tip1.set_fill(DARK_BLUE)
        tip1.set_color(DARK_BLUE)

        arrow2 = Line(start = ORIGIN,end = 1*UP)
        arrow2.set_color(DARK_BLUE)
        tip2 = Polygon(UP,0.8*UP-0.2*RIGHT,0.8*UP-0.2*LEFT)
        tip2.set_opacity(1)
        tip2.set_fill(DARK_BLUE)
        tip2.set_color(DARK_BLUE)
        arrow2.set_color(DARK_BLUE)

        self.play(ShowCreation(line1), ShowCreation(tip1), ShowCreation(arrow2), ShowCreation(tip2))
        self.wait()

        a_line = Line(start = ORIGIN,end = 2*UP+2*RIGHT+[0,0,2])
        a_line.set_color(GOLD_E)
        a_tip = Polygon(2*UP+2*RIGHT+[0,0,2],2*UP+1.6*RIGHT+[0,0,1.8],1.6*UP+2*RIGHT+[0,0,1.8])
        a_tip.set_opacity(1)
        a_tip.set_fill(GOLD_E)
        a_tip.set_color(GOLD_E)

        a_line_c1 = Line(start = ORIGIN,end = 2*UP+2*RIGHT+[0,0,2])
        a_line_c1.set_color(GOLD_E)
        a_tip_c1 = Polygon(2*UP+2*RIGHT+[0,0,2],2*UP+1.6*RIGHT+[0,0,1.8],1.6*UP+2*RIGHT+[0,0,1.8])
        a_tip_c1.set_opacity(1)
        a_tip_c1.set_fill(GOLD_E)
        a_tip_c1.set_color(GOLD_E)

        self.play(FadeOut(text), ShowCreation(a_line), ShowCreation(a_tip), ShowCreation(a_line_c1), ShowCreation(a_tip_c1))
        
        text = TextMobject(r"There is a vector $\beta_3$")
        text.scale(0.75)
        self.add_fixed_in_frame_mobjects(text)
        text.move_to(3*(DOWN+RIGHT))
        self.play(Write(text))
        self.wait()
        self.play(FadeOut(text))

        p_line1 = Line(start = ORIGIN,end = 2*RIGHT)
        p_line1.set_color(GOLD_E)
        p_tip1 = Polygon(RIGHT,0.8*RIGHT+0.2*DOWN,0.8*RIGHT+0.2*UP)
        p_tip1.move_to(2*RIGHT)
        p_tip1.set_opacity(1)
        p_tip1.set_fill(GOLD_E)
        p_tip1.set_color(GOLD_E)

        self.play(Transform(a_line_c1,p_line1),Transform(a_tip_c1,p_tip1))

        text = TextMobject(r"Take projection of $\beta_3$ on $\alpha_1$")
        text.scale(0.75)
        self.add_fixed_in_frame_mobjects(text)
        text.move_to(3*(DOWN+RIGHT))
        self.play(Write(text))
        self.wait()
        self.play(FadeOut(text))

        o_line1 = Line(start = 2*RIGHT,end = 2*UP+2*RIGHT+[0,0,2])
        o_line1.set_color(GREEN_E)
        o_tip1 = Polygon(2*UP+2*RIGHT+[0,0,2],1.8*UP+2*RIGHT+[0,0,1.8]+0.2*RIGHT,1.8*UP+2*RIGHT+[0,0,1.8]-0.2*RIGHT)
        o_tip1.set_opacity(1)
        o_tip1.set_fill(GREEN_E)
        o_tip1.set_color(GREEN_E)

        a_line1 = Line(start = ORIGIN,end = 2*UP+[0,0,2])
        a_line1.set_color(GREEN_E)
        a_tip1 = Polygon(2*UP+[0,0,2],1.8*UP+[0,0,1.8]+0.2*RIGHT,1.8*UP+[0,0,1.8]-0.2*RIGHT)
        a_tip1.set_opacity(1)
        a_tip1.set_fill(GREEN_E)
        a_tip1.set_color(GREEN_E)

        a_line1_c1 = Line(start = ORIGIN,end = 2*UP+[0,0,2])
        a_line1_c1.set_color(GREEN_E)
        a_tip1_c1 = Polygon(2*UP+[0,0,2],1.8*UP+[0,0,1.8]+0.2*RIGHT,1.8*UP+[0,0,1.8]-0.2*RIGHT)
        a_tip1_c1.set_opacity(1)
        a_tip1_c1.set_fill(GREEN_E)
        a_tip1_c1.set_color(GREEN_E)

        text = TextMobject(r"$\beta_3$-(projection of $\beta_3$ on $\alpha_1$)")
        text.scale(0.75)
        self.add_fixed_in_frame_mobjects(text)
        text.move_to(3*(DOWN+RIGHT))
        self.play(Write(text))
        self.play(ShowCreation(o_line1), ShowCreation(o_tip1))
        self.wait(2)
        self.play(FadeOut(a_line_c1), FadeOut(a_tip_c1), 
        FadeOut(a_line), FadeOut(a_tip),
        Transform(o_line1,a_line1), Transform(o_tip1,a_tip1))

        self.wait()
        self.play(FadeOut(text))

        p_arrow2 = Line(start = ORIGIN,end = 2*UP)
        p_arrow2.set_color(GOLD_E)
        p_tip2 = Polygon(2*UP,1.8*UP+0.2*RIGHT,1.8*UP+0.2*LEFT)
        p_tip2.set_opacity(1)
        p_tip2.set_fill(GOLD_E)
        p_tip2.set_color(GOLD_E)
        p_arrow2.set_color(GOLD_E)

        last_a = Line(start = 2*UP,end = [0,2,2])
        last_a.set_color(GOLD_E)
        last_a_tip = Polygon([0,0,2],[0,0,1.8]+0.2*RIGHT,[0,0,1.8]+0.2*LEFT)
        last_a_tip.move_to([0,2,2])
        last_a_tip.set_opacity(1)
        last_a_tip.set_fill(GOLD_E)
        last_a_tip.set_color(GOLD_E)

        self.wait()
        text = TextMobject(r"Take projection on $\alpha_2$")
        text.scale(0.75)
        self.add_fixed_in_frame_mobjects(text)
        text.move_to(3*(DOWN+RIGHT))
        self.play(Write(text))
        self.play(Transform(a_line1_c1,p_arrow2),Transform(a_tip1_c1,p_tip2))
        self.wait()
        self.play(FadeOut(text))

        text = TextMobject(r"$\beta_3$-(projection of $\beta_3$ on $\alpha_1$ + projection of $\beta_3$ on $\alpha_2$)")
        text.scale(0.75)
        self.add_fixed_in_frame_mobjects(text)
        text.move_to(3*DOWN+2*RIGHT)
        self.play(Write(text))
        self.play(ShowCreation(o_line1), ShowCreation(o_tip1))
        self.wait(2)
        self.play(ShowCreation(last_a_tip), ShowCreation(last_a))
        self.wait()
        self.play(FadeOut(text))

        larrow3 = Line(start = ORIGIN,end = [0,0,2])
        larrow3.set_color(GOLD_E)
        ltip3 = Polygon([0,0,2],[0,0,1.8]+0.2*RIGHT,[0,0,1.8]+0.2*LEFT)
        ltip3.set_opacity(1)
        ltip3.set_fill(GOLD_E)
        ltip3.set_color(GOLD_E)
        self.wait()
        self.play(FadeOut(o_line1), FadeOut(o_tip1), FadeOut(a_line1_c1), FadeOut(a_tip1_c1), Transform(last_a,larrow3), Transform(last_a_tip,ltip3))
        
        text = TextMobject(r"Normalisation of the orthogonal vector")
        text.scale(0.75)
        self.add_fixed_in_frame_mobjects(text)
        text.move_to(3*DOWN+2*RIGHT)
        self.play(Write(text))
        
        arrow3 = Line(start = ORIGIN,end = [0,0,1])
        arrow3.set_color(DARK_BLUE)
        tip3 = Polygon([0,0,1],[0,0,0.8]-0.2*RIGHT,[0,0,0.8]-0.2*LEFT)
        tip3.set_opacity(1)
        tip3.set_fill(DARK_BLUE)
        tip3.set_color(DARK_BLUE)
        self.play(Transform(last_a,arrow3), Transform(last_a_tip,tip3))

        self.wait(3)